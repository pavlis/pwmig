.TH GCLFIELD2VTK 1
.SH NAME
gclfield2vtk \- convert internal gclfield objects to vtk format files
.SH SYNOPSIS
.nf
\fBgclfield2vtk\fR db|infile outfile [-i | -g gridname -f fieldname] 
             -odbf outfieldname -r -xml|-binary -pf pffile] -V
.fi
.SH DESCRIPTION
.LP
This program is used to convert Geographical CurviLinear (GCL) field objects
stored in an Antelope database to external formats that can be read by 
the Visualization Tool Kit (VTK).  The program can convert scalar3d, vector3d,
scalar2d, and grid2d (structured grid surfaces such as a DEM) objects.  
Outputs are in "legacy VTK" format or the newer XML format depending on the 
choice of options.  Not all combinations are currently supported.  
(see Bugs and Caveats section).
.LP
Argument 1 is required.  If the \fB-i\fR flag is present this is assumed to
be an input file base name.  Otherwise it is assumed to be a database
named \fBdb\fR.  In the later case it must point to a valid Antelope database
descriptor.  \fBoutfile\fR is the (required) output file name.  Use a simple 
name without an extension for this file.  The program appends an appropriate 
extension depending on the output option.  This is necessary for paraview to
grok the file type in windows, macos, or linux implementations.  The output 
files should normally be readable directly by paraview. 
Currently the extensions are "vtk" for binary or ascii legacy vtk files 
and "vts" for 3D grid output using the -xml option.
.SH OPTIONS
.IP -g 
Override the parameter file grid name to locate the gclfield to be converted.
The current implementation stores GCLfield objects in an antelope database
keyed by a gridname and a fieldname.  This is one key.
This is ignored if the -i flag is used.
.IP -f 
Defines the related key for the field name used to index the desired 
data.  This is ignored if the -i flag is used.
.IP -r
Because visualizations use a Cartesian coordinate system it is always
essential to make sure a set of scene components are in a common reference frame. 
This flag is a switch to turn on this option (default is false). 
When used the program will look for remap parameters in the parameter file 
(see below).
.IP -odbf
This is most commonly used to apply an internal agc operator to 
a field and save the result.  This parameter should be avoided an 
will probably eventually be depricated.
.IP -xml
Use the -xml to have the output written in vtk's xml format.
This is strongly recommended for large 3D structured grid as the resulting
files are platform indepenent files that are much faster to read than
the default ascii file.
.IP -binary
Use the -binary format to have the output written as binary.  This is 
comparable to -xml but the vtk control parameters are written in ascii 
instead of being coded in xml.  This format may be slightly faster to 
read than -xml, but the authors experience is it is not significant if 
true at all.   Generally -xml should be used in preference to -binary 
as the output file is more generic.
.IP -pf
Use pffile.pf as the alternative parameter file to the standard gclfield2vtk.pf.
Note this program does not use the Antelope pf feature to search for pf 
files in a heirarchy of places.  Only the file referenced is read.
.SH FILES
.LP
The default output file is a legacy VTK file described in documentation 
for the Visualization Tool Kit (VTK) library.
Structured grids can optionally be written in the newer XML format also
described in the VTK documentation.
The XML format, in fact, is highly recommended for 3D grids.
.SH PARAMETER FILE
.LP
Two parameters can be viewed as defaults for command line arguments.  
The \fBgridname\fR parameter is the default for -g and
\fBfieldname\fR provides the default for -f.
.LP
The \fBfieldtype\fR defines the type of grid object the program will convert.  Allowed 
options are:  grid2d, scalar2d, scalar3d, and vector3d.  
This parameter must match the type of the data your are attempting to convert
or the program will abort with an error message.
.LP
Several parameters are linked to the -r option:  
\fBorigin_latitude, origin_longitude, radius_origin,\fR and \fBazimuth_y_axis\fR.  
The first three specific the latitude (degrees), longitude (degrees), and radius (km)
of the Cartesian coordinate origin.  The coordinate axes can be rotated by the 
angle specified by \fBazimuth_y_axis\fR.   As the name implies this is the rotation 
in the geographic azimuth sense of the y (north) axis in degrees.  i.e. a positive 
angle rotates the y (north) axis toward the east direction.
.LP
The boolean parameter \fBsave_as_vector_field\fR is a switch for handling vector field data.
When true output is VTK's vector field format.  When false vector fields are output with one 
file per vector component.  If not defined this will default to false.
.LP
The output for 3D vector and scalar fields allow an option for name tags
used by VTK to tag each data tuple.   Two closely linked parameters define
this naming:  (1) \fBscalars_name_tag\fR sets the name used for color 
mapping in paraview and (2) \fBdata_component_names\fR define added name tags
for vector components.   For scalar data best practice is to make the two
names the same.  For vector data choose descriptive names for each 
data component.   Note that the \fBdata_components_names\fR is a list 
defined by the antelope &Tbl{} construct in the parameter file.   Use one
line for each name tag.   Make sure the number of names matches the number of
components in the data you are converting.   The program will not abort if
there is a size mismatch, but you may not get the names set right.  Note for
scalar data the &Tbl construct is still required but in that case there should
only be one name. 
.LP
A \fBscalars_name_tag\fR has a special purpose for grid2d objects and maskedgrid2d objects.
In that case it can servce as a switch to switch between elevation and depth, which have 
a difference in sign.  If \fBscalars_name_tag\fR is Elevation the sign is switched to be
elevation.  Otherwise the depth (in km) is written to the scalars attribute section.
.LP
There are some special parameters used only in certain circumstances.  The user is warned these
may one day be depricated in favor of editing and saving to new loction.  The boolean
parameter \fBremove_mean_x3_slices\fR can be useful for absolute velocity tomography models.  
It removes the average value of each layer (constant x3 slice) before saving the output.
The boolean \fBapply_agc\fR and integer valued parameter \fBagc_operator_length\fR are linked.  
When \fBapply_agc\fR is true an agc operator with a length (in vertical-x3 samples) is applied
before output.  The author has used this frequently for wavefield imaging volumes.
.SH DIAGNOSTICS
.LP
Check stderr for errors.  Most problems will generate a relatively verbose message.
.SH "BUGS AND CAVEATS"
.IP (1)
Not all combinations of output format options are support.  The -xml and 
-binary options will only work on 3D scalar or vector fields.  Either
option will silently be ignored for any 2D object which currently only
use ascii output to vtk files..
.IP (2)
For version 3.8 of paraview on 64 bit platforms a bug seems to exist in libc for reading ascii data created by this program.  The VTK reader for ascii files 
will abort when trying to read numbers with exponents that define tiny
numbers that overflow the exponent field on floats.  (e.g. a number like
1.6698897e-258 will cause the VTK reader for legacy VTK files to throw
an exception and cause paraview, which uses this routine, to abort).  
For this reason use only the -xml or -binary option on 64 bit platforms. 
Later versions of paraview may have fixed this bug.
.IP (3)
The agc and remove mean parameters really do not belong in this program.  There is a good chance these
will be replaced with a more elaborate field editor or implemented as a python module in paraview in
the future.
.SH AUTHOR
.nf
Gary L. Pavlis
Department of Geological Sciences
Indiana University 
1001 East 10th Street
Bloomington, IN 47405
pavlis@indiana.edu
.fi
